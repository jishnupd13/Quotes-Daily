trigger:
  branches:
    include:
      - development

pool:
  name: Default   # Self-hosted Mac agent

jobs:
  # Job 1: Build Release and Upload to Play Store
  - job: ReleaseBuild
    displayName: "Build Release & Upload"
    steps:
      - task: Gradle@2
        inputs:
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          tasks: 'bundleRelease'

      - publish: app/build/outputs/bundle/release/app-release.aab
        artifact: releaseBundle

  # Job 2: Run Appium Tests on Release Bundle
  - job: AppiumTests
    displayName: "Run Appium Tests"
    dependsOn: ReleaseBuild
    steps:
      - checkout: self
      - checkout: Qoutes_Daily_Appium   # Your test repo

      - download: current
        artifact: releaseBundle

      - script: |
          echo "Installing dependencies for Appium tests..."
          brew install node || true
          brew install npm || true
          npm install -g appium

          echo "Running Appium tests on release AAB..."
          ./gradlew -p Qoutes_Daily_Appium clean test

        displayName: "Run Appium Tests"

      # Archive the test report
      - publish: Qoutes_Daily_Appium/build/reports/tests/test
        artifact: appiumTestReport

      # Email the report manually
      - script: |
          echo "Preparing Appium test report email..."
          REPORT_DIR="Qoutes_Daily_Appium/build/reports/tests/test"

          if [ -d "$REPORT_DIR" ]; then
            zip -r appium-test-report.zip "$REPORT_DIR"
            echo "Appium test report zipped."
          else
            echo "No report directory found. Sending failure email."
            echo "Appium tests did not produce a report." > email_body.txt
          fi

          # Send mail (requires sendmail/mailutils configured on the Mac agent)
          if [ -f appium-test-report.zip ]; then
            echo "Appium Tests Completed. See attached report." > email_body.txt
            uuencode appium-test-report.zip appium-test-report.zip | \
            mail -s "Appium Test Report - Quotes Daily" \
            jishnupd13@gmail.com< email_body.txt
          else
            mail -s "Appium Test Report - Quotes Daily [FAILED]" \
            jishnupd13@gmail.com,secondemail@example.com,manager@example.com < email_body.txt
          fi
        displayName: "Send Email with Appium Test Report"

  # Job 3: Publish to Play Store (only if tests pass)
  - job: PublishToPlayStore
    displayName: "Publish to Google Play"
    dependsOn: AppiumTests
    condition: succeeded()   # Only run if tests succeeded
    steps:
      - download: current
        artifact: releaseBundle

      - task: GooglePlayRelease@4
        inputs:
          serviceConnection: 'Quotes Daily Service connection'
          applicationId: 'com.app.quotes_daily'
          bundleFile: '$(Pipeline.Workspace)/releaseBundle/app-release.aab'
          track: 'alpha'
          trackName: 'Closed testing - Closed Test Gamma'
